// Code generated by go generate; DO NOT EDIT.
package test

import "github.com/icon-project/goloop/module"

type NetworkManagerBase struct{}

func (_r *NetworkManagerBase) Start() error {
	panic("not implemented")
}

func (_r *NetworkManagerBase) Term() {
	panic("not implemented")
}

func (_r *NetworkManagerBase) GetPeers() []module.PeerID {
	panic("not implemented")
}

func (_r *NetworkManagerBase) RegisterReactor(name string, pi module.ProtocolInfo, reactor module.Reactor, piList []module.ProtocolInfo, priority uint8) (module.ProtocolHandler, error) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) RegisterReactorForStreams(name string, pi module.ProtocolInfo, reactor module.Reactor, piList []module.ProtocolInfo, priority uint8) (module.ProtocolHandler, error) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) UnregisterReactor(reactor module.Reactor) error {
	panic("not implemented")
}

func (_r *NetworkManagerBase) SetRole(version int64, role module.Role, peers ...module.PeerID) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) GetPeersByRole(role module.Role) []module.PeerID {
	panic("not implemented")
}

func (_r *NetworkManagerBase) AddRole(role module.Role, peers ...module.PeerID) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) RemoveRole(role module.Role, peers ...module.PeerID) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) HasRole(role module.Role, id module.PeerID) bool {
	panic("not implemented")
}

func (_r *NetworkManagerBase) Roles(id module.PeerID) []module.Role {
	panic("not implemented")
}

func (_r *NetworkManagerBase) SetTrustSeeds(seeds string) {
	panic("not implemented")
}

func (_r *NetworkManagerBase) SetInitialRoles(roles ...module.Role) {
	panic("not implemented")
}
